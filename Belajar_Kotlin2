Variabek constant sama dengan val dia immutable
dan constant itu wajib val.
apa bedanya : yang membedakan antara tipe  variabel berjenis val dengan constant
constant adalah  immutable data, yang biasanya diakses untuk keperluan global
artinya global itu bisa diakses dimanapun

constant wajib menggunakan val
jadi constant itu untuk keperluan global, jika dikses di lokal variabel atau dijadikan di lokal variabel maka akan
error


tipe data larik atau array :  tipe data yang berisikan kumpulan data dengan tipe data yang sama
tipe data array di kotlin direpresentasikan dengan kata kunci Array<T> jadi generic class


Array Nullable : secara standart data array di kotlin tidak boleh null maka error
untuk mengatasi hal tersebut gunakan operator ?
jika kita butuh membuat array yang datanya boleh null, kita bisa menggunakan ? (tanda tanya)

nah agar kita boleh memasukan array null maka kita menggunakan method yang bernama arrayOfNuuls(size)

Tipe data range di kotlin
kadang kita memiliki kebutuhan yang pengen nampung data yang isinya cuma angka tetapi berurutan.
contohnya 1-100 atau 1-1000, kalau kita bikin dlm bentuk array seperti itu itu pr bgt dan cape
untuk jenis kasus seperti itu terdapat tipe data  bernama range.

kotlin mendukung tipe data range, yang digunakan untuk kebutuhan seperti ini
cara membuat range di kotlin itu sangat mudah cukup menggunakan  (..) titik 2x
contoh 0..10 : range 0 - 10
       1..100 : range 1 samapai 100

dan juga menggunakan kelipatan menggunakan step

method yang terdapat dalam range

range kebutuhannya bukan untuk menampung data dari 1..100, tetapi untuk perulangan

count() : Mendapatkan Total  data range -> misal range 1..100 maka total rangenya 100
contains : Mengecek apakah terdapat value tersebut -> misal kita bikin range 1..100, kita bisa mengecek apakah
20 itu ada di range 1..100 atau tdk

first: mendapatkan nilai pertama
last : menndapatkan nilai akhir
step : mendapatkan nilai tiap kenaikannya brp

bisa juga membuat range turun menggunakan downTO


Tipe Boolean : Jika menemukan ekspresi membandingkan operasi bolean lebih dari satu, maka kondisi tersebut dibaca dari kiri terlebih dahulu
contoh (((apakahLulusUjian && apakahLulusAbsen) && apakahLulusExtra) || lulusUjianPraktek)

if expressin : percabangan artinya kita bisa mengeksekusi kode program tertentu ketika suatu kondisi tersebut terpenuhi


